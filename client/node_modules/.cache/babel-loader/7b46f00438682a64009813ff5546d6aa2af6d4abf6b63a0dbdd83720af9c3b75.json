{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Github/tomotime/selfie-snake/client/src/Pages/Create/UploadSelfie.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Icon, IconButton, Image, Input, Progress, Spinner, Text, VStack } from \"@chakra-ui/react\";\nimport { FiCamera } from \"react-icons/fi\";\nimport axios from \"axios\";\nimport imageCompression from \"browser-image-compression\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UploadSelfie = ({\n  done\n}) => {\n  _s();\n  const [image, setImage] = useState(null); // image file\n  const [loading, setLoading] = useState(false); // loading state\n  const [url, setUrl] = useState(\"\"); // public url\n\n  // handle change of input\n  const handleChange = async e => {\n    if (e.target.files[0]) {\n      const file = e.target.files[0];\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 800,\n        useWebWorker: true\n      };\n      try {\n        setLoading(true);\n        const compressedFile = await imageCompression(file, options);\n        setImage(compressedFile);\n        handleUpload(compressedFile);\n      } catch (error) {\n        console.error(\"Error compressing the file:\", error);\n      }\n    }\n  };\n\n  // handle upload of file\n  const handleUpload = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setLoading(false);\n      setUrl(response.data.fileUrl);\n    } catch (error) {\n      console.error(\"Error uploading the file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 5,\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        children: \"Start by taking a selfie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleChange,\n        display: \"none\",\n        id: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          as: \"span\",\n          boxSize: 24,\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: FiCamera,\n            fontSize: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this),\n          isRound: true,\n          mb: 4,\n          _hover: {\n            cursor: \"pointer\",\n            bg: \"blue.100\"\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"lg\",\n      m: 5,\n      color: \"brand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadSelfie, \"3bsnZUSQdvXi3eUQFO9UUpuIMP8=\");\n_c = UploadSelfie;\nvar _c;\n$RefreshReg$(_c, \"UploadSelfie\");","map":{"version":3,"names":["useState","Icon","IconButton","Image","Input","Progress","Spinner","Text","VStack","FiCamera","axios","imageCompression","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadSelfie","done","_s","image","setImage","loading","setLoading","url","setUrl","handleChange","e","target","files","file","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","handleUpload","error","console","formData","FormData","append","response","post","headers","data","fileUrl","spacing","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","display","id","htmlFor","as","boxSize","icon","isRound","mb","_hover","cursor","bg","size","m","color","_c","$RefreshReg$"],"sources":["/Users/justinzhao/Github/tomotime/selfie-snake/client/src/Pages/Create/UploadSelfie.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  Icon,\n  IconButton,\n  Image,\n  Input,\n  Progress,\n  Spinner,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { FiCamera } from \"react-icons/fi\";\nimport axios from \"axios\";\nimport imageCompression from \"browser-image-compression\";\n\nexport const UploadSelfie = ({ done }) => {\n  const [image, setImage] = useState(null); // image file\n  const [loading, setLoading] = useState(false); // loading state\n  const [url, setUrl] = useState(\"\"); // public url\n\n  // handle change of input\n  const handleChange = async (e) => {\n    if (e.target.files[0]) {\n      const file = e.target.files[0];\n\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 800,\n        useWebWorker: true,\n      };\n\n      try {\n        setLoading(true);\n        const compressedFile = await imageCompression(file, options);\n        setImage(compressedFile);\n        handleUpload(compressedFile);\n      } catch (error) {\n        console.error(\"Error compressing the file:\", error);\n      }\n    }\n  };\n\n  // handle upload of file\n  const handleUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setLoading(false);\n      setUrl(response.data.fileUrl);\n    } catch (error) {\n      console.error(\"Error uploading the file:\", error);\n    }\n  };\n\n  return (\n    <VStack spacing={5}>\n      {!loading ? (\n        <>\n          <Text fontSize=\"lg\">Start by taking a selfie.</Text>\n          <Input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleChange}\n            display=\"none\"\n            id=\"file-input\"\n          />\n          <label htmlFor=\"file-input\">\n            <IconButton\n              as=\"span\"\n              boxSize={24}\n              icon={<Icon as={FiCamera} fontSize={30} />}\n              isRound\n              mb={4}\n              _hover={{ cursor: \"pointer\", bg: \"blue.100\" }}\n            >\n              Upload\n            </IconButton>\n          </label>\n        </>\n      ) : (\n        <Spinner size=\"lg\" m={5} color=\"brand\" />\n      )}\n    </VStack>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}