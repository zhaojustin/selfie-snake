{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Github/tomotime/selfie-snake/client/src/Pages/Create/UploadSelfie.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Icon, IconButton, Image, Input, Progress, Text, VStack } from \"@chakra-ui/react\";\nimport { FiCamera } from \"react-icons/fi\";\nimport axios from \"axios\";\nimport imageCompression from \"browser-image-compression\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UploadSelfie = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(\"\");\n  const handleChange = async e => {\n    if (e.target.files[0]) {\n      const file = e.target.files[0];\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 800,\n        useWebWorker: true\n      };\n      try {\n        const compressedFile = await imageCompression(file, options);\n        setImage(compressedFile);\n        handleUpload(compressedFile);\n      } catch (error) {\n        console.error(\"Error compressing the file:\", error);\n      }\n    }\n  };\n  const handleUpload = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      console.log(file);\n      const response = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setProgress(progress);\n        }\n      });\n      console.log(response);\n      setUrl(response.data.fileUrl);\n    } catch (error) {\n      console.error(\"Error uploading the file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"lg\",\n      children: \"Start by taking a selfie.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleChange,\n      display: \"none\",\n      id: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-input\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        as: \"span\",\n        boxSize: 24,\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          as: FiCamera,\n          fontSize: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this),\n        isRound: true,\n        mb: 4,\n        _hover: {\n          cursor: \"pointer\",\n          bg: \"blue.100\"\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      value: progress,\n      size: \"sm\",\n      mb: 4,\n      bg: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), url && /*#__PURE__*/_jsxDEV(Image, {\n      src: url,\n      alt: \"Uploaded file\",\n      mt: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadSelfie, \"LP5/8Jek0D3fXYuA3F1vpgCPwoY=\");\n_c = UploadSelfie;\nvar _c;\n$RefreshReg$(_c, \"UploadSelfie\");","map":{"version":3,"names":["useState","Icon","IconButton","Image","Input","Progress","Text","VStack","FiCamera","axios","imageCompression","jsxDEV","_jsxDEV","UploadSelfie","_s","image","setImage","progress","setProgress","url","setUrl","handleChange","e","target","files","file","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","handleUpload","error","console","formData","FormData","append","log","response","post","headers","onUploadProgress","progressEvent","Math","round","loaded","total","data","fileUrl","spacing","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","display","id","htmlFor","as","boxSize","icon","isRound","mb","_hover","cursor","bg","value","size","src","alt","mt","_c","$RefreshReg$"],"sources":["/Users/justinzhao/Github/tomotime/selfie-snake/client/src/Pages/Create/UploadSelfie.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  Icon,\n  IconButton,\n  Image,\n  Input,\n  Progress,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { FiCamera } from \"react-icons/fi\";\nimport axios from \"axios\";\nimport imageCompression from \"browser-image-compression\";\n\nexport const UploadSelfie = () => {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(\"\");\n\n  const handleChange = async (e) => {\n    if (e.target.files[0]) {\n      const file = e.target.files[0];\n\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 800,\n        useWebWorker: true,\n      };\n\n      try {\n        const compressedFile = await imageCompression(file, options);\n        setImage(compressedFile);\n        handleUpload(compressedFile);\n      } catch (error) {\n        console.error(\"Error compressing the file:\", error);\n      }\n    }\n  };\n\n  const handleUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      console.log(file);\n      const response = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          const progress = Math.round(\n            (progressEvent.loaded / progressEvent.total) * 100\n          );\n          setProgress(progress);\n        },\n      });\n      console.log(response);\n      setUrl(response.data.fileUrl);\n    } catch (error) {\n      console.error(\"Error uploading the file:\", error);\n    }\n  };\n\n  return (\n    <VStack spacing={5}>\n      <Text fontSize=\"lg\">Start by taking a selfie.</Text>\n      <Input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleChange}\n        display=\"none\"\n        id=\"file-input\"\n      />\n      <label htmlFor=\"file-input\">\n        <IconButton\n          as=\"span\"\n          boxSize={24}\n          icon={<Icon as={FiCamera} fontSize={30} />}\n          isRound\n          mb={4}\n          _hover={{ cursor: \"pointer\", bg: \"blue.100\" }}\n        >\n          Upload\n        </IconButton>\n      </label>\n      <Progress value={progress} size=\"sm\" mb={4} bg=\"blue\" />\n      {url && <Image src={url} alt=\"Uploaded file\" mt={4} />}\n    </VStack>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}