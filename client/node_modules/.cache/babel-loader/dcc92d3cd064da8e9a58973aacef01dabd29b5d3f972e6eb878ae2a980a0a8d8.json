{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Github/tomotime/selfie-snake/src/Components/ZigZag.js\";\nimport { Box, Image, SimpleGrid } from \"@chakra-ui/react\";\n\n// A helper component for a single image row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageRow = ({\n  images,\n  offset\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  display: \"flex\",\n  justifyContent: offset ? \"flex-end\" : \"flex-start\",\n  children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    columns: 3,\n    spacing: 4,\n    w: \"fit-content\",\n    children: images.map((src, index) => /*#__PURE__*/_jsxDEV(Image, {\n      src: src,\n      boxSize: \"150px\",\n      objectFit: \"cover\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n// The main Zigzag component\n_c = ImageRow;\nexport const ZigzagPattern = ({\n  imageUrls\n}) => {\n  // Split the imageUrls array into chunks of 3\n  const chunkedImages = [];\n  for (let i = 0; i < imageUrls.length; i += 3) {\n    chunkedImages.push(imageUrls.slice(i, i + 3));\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: chunkedImages.map((images, index) => /*#__PURE__*/_jsxDEV(ImageRow, {\n      images: images,\n      offset: index % 2 !== 0\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ZigzagPattern;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageRow\");\n$RefreshReg$(_c2, \"ZigzagPattern\");","map":{"version":3,"names":["Box","Image","SimpleGrid","jsxDEV","_jsxDEV","ImageRow","images","offset","display","justifyContent","children","columns","spacing","w","map","src","index","boxSize","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","_c","ZigzagPattern","imageUrls","chunkedImages","i","length","push","slice","_c2","$RefreshReg$"],"sources":["/Users/justinzhao/Github/tomotime/selfie-snake/src/Components/ZigZag.js"],"sourcesContent":["import { Box, Image, SimpleGrid } from \"@chakra-ui/react\";\n\n// A helper component for a single image row\nconst ImageRow = ({ images, offset }) => (\n  <Box display=\"flex\" justifyContent={offset ? \"flex-end\" : \"flex-start\"}>\n    <SimpleGrid columns={3} spacing={4} w=\"fit-content\">\n      {images.map((src, index) => (\n        <Image key={index} src={src} boxSize=\"150px\" objectFit=\"cover\" />\n      ))}\n    </SimpleGrid>\n  </Box>\n);\n\n// The main Zigzag component\nexport const ZigzagPattern = ({ imageUrls }) => {\n  // Split the imageUrls array into chunks of 3\n  const chunkedImages = [];\n  for (let i = 0; i < imageUrls.length; i += 3) {\n    chunkedImages.push(imageUrls.slice(i, i + 3));\n  }\n\n  return (\n    <Box>\n      {chunkedImages.map((images, index) => (\n        <ImageRow key={index} images={images} offset={index % 2 !== 0} />\n      ))}\n    </Box>\n  );\n};\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,kBAAkB;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,kBAClCH,OAAA,CAACJ,GAAG;EAACQ,OAAO,EAAC,MAAM;EAACC,cAAc,EAAEF,MAAM,GAAG,UAAU,GAAG,YAAa;EAAAG,QAAA,eACrEN,OAAA,CAACF,UAAU;IAACS,OAAO,EAAE,CAAE;IAACC,OAAO,EAAE,CAAE;IAACC,CAAC,EAAC,aAAa;IAAAH,QAAA,EAChDJ,MAAM,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBZ,OAAA,CAACH,KAAK;MAAac,GAAG,EAAEA,GAAI;MAACE,OAAO,EAAC,OAAO;MAACC,SAAS,EAAC;IAAO,GAAlDF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACN;;AAED;AAAAC,EAAA,GAVMlB,QAAQ;AAWd,OAAO,MAAMmB,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAC9C;EACA,MAAMC,aAAa,GAAG,EAAE;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC5CD,aAAa,CAACG,IAAI,CAACJ,SAAS,CAACK,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C;EAEA,oBACEvB,OAAA,CAACJ,GAAG;IAAAU,QAAA,EACDgB,aAAa,CAACZ,GAAG,CAAC,CAACR,MAAM,EAAEU,KAAK,kBAC/BZ,OAAA,CAACC,QAAQ;MAAaC,MAAM,EAAEA,MAAO;MAACC,MAAM,EAAES,KAAK,GAAG,CAAC,KAAK;IAAE,GAA/CA,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4C,CACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,GAAA,GAdWP,aAAa;AAAA,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}